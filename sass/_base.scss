// General styles for the site

// Simple reset
*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

//  body styles
body{
  font-family: $poppins;
  font-weight: $fw-400;
  color: $gray-200;
  background: $gray-100;
  display: grid;
  place-items: center;
  min-height: 100vh;
  padding-block: $s-64;

  //  section styles
  header{ 
    text-align: center;
    & > p{
      font-size: $fs-15;
      max-width: clamp(32ch, 40vw, 55ch);
      padding-top: $s-16;
    }
  }
  // h1 and h2 styles
  h1,
  h2{
    font-weight: $fw-600;
    color: $blue-200;

    //  span styles
    span {
      font-weight: $fw-200;
    }
  }

  // h1 font size
  h1{
    font-size: clamp($fs-24, 3vw, $fs-36);
  }

  // h2 font size
  h2{
    font-size: $fs-20;
  }

  // Main styles
  main{
    display: flex;
    flex-direction: column;
    padding: $s-32;
    gap: $s-24;

    //  article styles
    article{
      display: flex;
      flex-direction: column;
      background: $white;
      border-radius: 5px;
      box-shadow: 0 4px 12px rgba(77, 79, 98, 0.25);
      overflow: hidden;
      padding: $s-24;
      width: clamp(311px, 40vw, 350px);
      aspect-ratio: 1.4/1;

      & > h2{
        margin-bottom: clamp($s-4, 1vw, $s-8);
      }

      & > p{
        font-size: $fs-13;
        max-width: clamp(30ch, 40vw, 35ch);
        height: 100%;
      }

      & > img{
        width: clamp(57px, 10vw, 64px);
        aspect-ratio: 1/1;
        align-self: flex-end;
        margin-top: $s-32;
      }

      &:first-of-type{
        border-top: 4px solid $cyan;
      }
      &:nth-of-type(2){
        border-top: 4px solid $red;

        & > p{
          max-width: 35ch;
        }
      }
      &:nth-of-type(3){
        border-top: 4px solid $orange;
      }
      &:last-of-type{
        border-top: 4px solid $blue-100;
      }
    }

    // Media query grid layout for large screens
    @media only screen and (min-width: 1025px){
      display: grid;
      place-items: center;
      grid-template-columns: repeat(3, 1fr);
      grid-template-rows: repeat(4, 1fr);
      grid-gap: $s-32;

      article{
          &:first-of-type {
              grid-column: 1;
              grid-row: 2 / span 2;
            }
          
            &:nth-of-type(2) {
              grid-column: 2;
              grid-row: 1 / span 2;
            }
          
            &:nth-of-type(3) {
              grid-column: 2;
              grid-row: 3 / span 2;
            }
          
            &:last-of-type {
              grid-column: 3;
              grid-row: 2 / span 2;
            }
      }
    }
  }
}

